浏览器中渲染引擎的渲染原理：
	1，渲染引擎从网络中请求资源，开始解析html文档，将文档解析成树形结构。
	2，渲染引擎解析CSS文档， 并将文档解析成树形结构(Css Rules tree)。
	3，将dom结构和css结构合并到一起形成 Rendering tree.(Rendering tree 和 DOM tree 是不一样的
		因为有些元素是不包含在 rendering tree 中的。例如: css 属性设置为 display: none; 的那些元素。)
	4, 通过 rendering tree, 已经知道了文档中有哪些节点和属于这些节点的css以及节点之间
		的从属关系，那么就可以通过这些信息来进行节点位置的摆放。
	5，最后一步是遍历rendering tree, 然后开始绘制， 通过显卡将内容显示出来。

	6，(reflow): 绘制完文档之后，如果浏览器中的一些事件导致某个元素的位置发生了改变，或者是
		边距、定位方式发生了改变就会引起文档的重新绘制，这个过程就称作reflow. 例如： display: none;
		元素突然之间变成了 display:block；就会导致文档的重绘， 但是不一定是整个文档都会重新排列。

	7， repainting: 如果某个元素的背景色或者是文字颜色或者是边框的颜色发生改变会
		引起相应的元素发生重新绘制，但是因为元素的占位没有发生变化因此不会发生重新排列的行为。